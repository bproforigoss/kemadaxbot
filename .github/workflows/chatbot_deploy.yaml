name: Deploy_by_chatbot

on: 
  workflow_dispatch:
    inputs:
      chatID:
        description: 'Telegram chatID'     
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  AGE_KEY: ${{ secrets.AGE_KEY }}
  SOPS_AGE_KEY_FILE: .config/sops/age/keys.txt
             
jobs:
  docker:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
          flavor: |
            latest=true

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
            
  deploy_to_kubernetes_cluster:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        
      - name: Set Kubernetes Context
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{secrets.KUBE_CONFIG}}
               
      - name: Set up Mozilla SOPS 
        run: |
          wget https://github.com/mozilla/sops/releases/download/v3.7.1/sops_3.7.1_amd64.deb
          sudo dpkg -i sops_3.7.1_amd64.deb

        
      - name: Decryption 
        run: |
          ls -a .
          echo "$AGE_KEY" > .config/sops/age/keys.txt
          sops -d  kubernetes/chatbot-app/base/secret/chatbot.enc.env > kubernetes/chatbot-app/base/secret/chatbot.secret
  
          
      - name: Deploy to Cluster
        run: |
          cd kubernetes/chatbot-app/base/
          kustomize edit set image kemadax="ghcr.io/${{ github.repository_owner }}/kemadaxbot:sha-${GITHUB_SHA::7}"
          cd ../../../
          kubectl apply -k kubernetes/chatbot-app/overlays/production/
          
          
          git config --global user.name 'Automated CI/CD Agent'
          git config --global user.email 'kemadax@gmail.com'
          git diff --quiet && git diff --staged --quiet || (git commit -am "Chatbot deploys" && git push)
          
          
  sending_response_to_chat:
    runs-on: ubuntu-latest
    needs: deploy_to_kubernetes_cluster
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
          
      - name: run chatbot Api
        run: |
          curl POST \
          -H 'Content-Type: application/json' \
          https://kemadaxbot.bprof.gesz.dev/responseAPI \
          -d '{"chat_id":"${{github.event.inputs.chatID}}"}'

          
